// Cycle detection in undirected graph using BFS

// TC- O(N+E) SC-O(N+E)+O(N)+O(N)

// Code--
  
  
bool checkcycle(int s, int v,vector,int>adj[],vector<int>&vis){
    queue,pair<int,int>>q;
    vis[s]=true;
    q.push(s,-1);
    while(q.size()>0){
        int node= q.front().first;
        int par= q.front().second;
        q.pop();
        for(auto it : adj[node]){
            if(!vis[it]){
                vis[it]=true;
                q.push(it,node);
            }else if(par!=it){
                return true;
            }
        }
        
    }
    return false;
}
 bool iscycle(int v, vector<int>adj[]){
     vector<int>vis(v+1,0);
     for(int i=1;i<=v;i++){
         if(!vis[i]){
             if(checkcycle(i,v,adj,vis)) return true;
         }
     }
     return false;
 }
