// Check bipartite graph using bfs

// TC-O(N+E) SC-O(N+E)+O(N)+O(N)

 // Code--
 
 
bool bipartite(int src, vector<int>adj[],int color[]){
    queue<int>q;
    q.push(src);
    color[src]=1;
    while(q.size()>0){
        int noe=q.front();
        q.pop();
        for(auto it:adj[node]){
            if(color[it]==-1){
                color[it]=1-color[node];
                q.push(it);
            }else if(color[it]==color[node]){
                return false;
            }
        }
    }
    return true;
}
bool checkbipartite(vector<int>adj[],int n){
    int color[n];
    memset(color,-1,sizeof color);
    for(int i=0;i<n;i++){
        if(color[i]==-1){
            if(!bipartite(i,adj,color)){
                return false;
            }
        }
    }
    return true;
}
