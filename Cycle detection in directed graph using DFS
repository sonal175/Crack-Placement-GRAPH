// cycle detection in directed graph using DFS
// TC-O(N+E) SC-O(2N)+ Auxiliary stack space O(N) where N are number of nodes and E are edges

// Code--

  
bool cycle(int node, vector<int>adj[],int vis[],int dfsvis[]){
    vis[node]=1;
    dfsvis[node]=1;
    for(auto it:adj[node]){
        if(!vis[it]){
            if(cycle(it,adj,vis,dfsvis)) return true;
        }else if(dfsvis[it]){
            return true;
        }
    }
    dfsvis[node]=0;
    return false;
}
 
bool check(int n, vector<int>adj[]){
    int vis[n],dfsvis[n];
    memset(vis,0,sizeof vis);
    memset(dfsvis,0,sizeof dfsvis);
    
    for(int i=0;i<n;i++){
        if(!vis[i]){
            if(cycle(i,adj,vis,dfsvis)){
                return true;
            }
        }
    }
    return false;
} 
