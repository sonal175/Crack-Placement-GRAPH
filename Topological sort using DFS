// Topological sort using DFS

// TC-O(N+E)  SC-O(N)+O(N) where N are number of nodes and E are edges

// Code--


void find(int node, vector<int>& vis,stack<int>&st,vector<int>adj[]){
    vis[node]=1;
    foR(auto it: adj[node]){
        if(!vis[it]){
            find(it,vis,st,adj);
        }
    }
    st.push(node);
}

vector<int> topological(int n, vector<int> adj[]){
     stack<int>st;
     vector<int>vis(n,0);
     for(int i=0li<n;i++){
         if(vis[i]==0){
             find(i,vis,st,adj);
         }
     }
     
     vector<int>topo;
     while(st.size()>0){
         topo.push_back(st.top());
         st.pop();
     }
     return topo;
}
